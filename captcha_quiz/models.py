from otree.api import (
    models, widgets, BaseConstants, BaseSubsession, BaseGroup, BasePlayer,
    Currency as c, currency_range
)

import random

doc = """
Captcha quiz, release 1.0.2, Made by JJ(jaejun.lees@gmail.com)
"""


def cmp(a, b):
    n, m = len(a), len(b)
    if n > m:
        # Make sure n <= m, to use O(min(n,m)) space
        a, b = b, a
        n, m = m, n

    current = range(n + 1)
    for i in range(1, m + 1):
        previous, current = current, [i] + [0] * n
        for j in range(1, n + 1):
            add, delete = previous[j] + 1, current[j - 1] + 1
            change = previous[j - 1]
            if a[j - 1] != b[i - 1]:
                change = change + 1
            current[j] = min(add, delete, change)

    return current[n]


def distance_and_ok(input_text, reference_text, max_error_rate):
    error_threshold = len(reference_text) * max_error_rate
    distance = cmp(input_text, reference_text)
    ok = distance <= error_threshold
    return distance, ok


class Player(BasePlayer):
    total_round_num = models.IntegerField()
    transcribed_text = models.StringField()
    cmp_dst = models.IntegerField()




class Constants(BaseConstants):
    name_in_url = 'captcha_quiz'
    players_per_group = None
    progress_bar = True
    reference_texts = [
        "W93BX",
        "JA3V8",
        "RBSKW",
        "HJ9PV",
        "TSMS9",
        "459CT",
        "R84CH",
        "D4TSH",
        "3M56R",
        "HAPK3", #10
        "VSJS",
        "CJR69H",
        "YBJWY",
        "BD8W",
        "ARKUH",
        "PRRCBU",
        "WPVA",
        "VEHKX",
        "5UDWEJ",
        "5RRT9R", #20
        "8NWTTS",
        "CSBHT",
        "U5BS89",
        "KR9RY",
        "WNW6",
        "TYXXWS",
        "SRXK",
        "36HX",
        "KVW34",
        "SE9K", #30
        "N3SAPS",
        "9HPBT",
        "SCTX5S",
        "DMJCW",
        "MUAR6",
        "KNKK",
        "CKSP",
        "BNR6",
        "PWXM",
        "4VJWSR", #40
        "5X8PTP",
        "JNCSD",
        "WVVYUM",
        "DT99Y",
        "DX4BYP",
        "UUSES4",
        "HDDC",
        "H9U5NP",
        "JNHU",
        "5AUCM5", #50
        "VW8UA",
        "WSUR",
        "46SUNS",
        "RVE8",
        "BC33N",
        "MSH3JM",
        "HJMKP",
        "W64S",
        "834JUB",
        "NUB6V", #60
        "MCVCMR",
        "BAT5",
        "XEJM54",
        "5CCUN",
        "WXWD",
        "9WMYW4",
        "R83PSM",
        "9YNNC",
        "89W8HP",
        "54WTV", #70
        "YNAVCA",
        "4XCCA",
        "DDBW5",
        "W89CYX",
        "X5WSD",
        "EN6BBA",
        "MTA6",
        "HRB4N",
        "9XAPK",
        "DWBHMC", #80
        "5VN3",
        "R45W",
        "KNMPC",
        "U9PN9",
        "59UX",
        "RB3C",
        "P5E4",
        "P94JJ",
        "CNSY",
        "9TSMN3", #90
        "JVRM",
        "MNV6V",
        "UPW5DJ",
        "P3D9",
        "BCXD",
        "KJWM6J",
        "DE696P",
        "JTDE",
        "9STR",
        "JRM5", #100
        "V9PB6",
        "NDRA",
        "KA8D4P",
        "H54VDC",
        "A93N6",
        "WCKCT8",
        "EWNJ",
        "M3N3US",
        "93N5",
        "STRP9T", #110
        "W3U3",
        "X5DAHB",
        "SCTJA4",
        "W9WRSE",
        "6ETE34",
        "DWMTSC",
        "RMR9",
        "HDPA",
        "4Y5XD",
        "NXD6", #120
        "893BN", 
        "3YSY",
        "YKNC",
        "V39MT",
        "J5VBX",
        "CMD6",
        "NTAW",
        "AEXAJ",
        "ACPSKW",
        "BJJ9", // #130
        "9XWTCR",
        "S4UAS4",
        "4634PW",
        "UMKT6R",
        "VMJT5A",
        "B3TC49",
        "XYDMP8",
        "CYA9N",
        "UB8YY",
        "H6SEX", #140
        "XDTS",
        "PMYWU",
        "NCVJB",
        "WM63U",
        "UJVP6C",
        "YKCAC6",
        "DE3E3",
        "9N54RJ",
        "PXUA",
        "TVU4UT", #150
        "KEK8",
        "SNDMDW",
        "KKJW",
        "3N4RA",
        "BTP6T9",
        "8BU959",
        "SCYKP",
        "4P6VY",
        "RW4RT",
        "YP83R5", #160
        "8C4J89",
        "3MN5VK",
        "3T536K",
        "E3AUK",
        "CUHUKY",
        "B4WS8",
        "TPWPJ3",
        "8EV5",
        "JR4B8V",
        "DW89", #170
        "V9N43",
        "KTB8",
        "WEMWN",
        "VX86",
        "PNAT",
        "WEMCH",
        "SD4384",
        "TWBD53",
        "DMY4A",
        "8C44W4", #180
        "MBAR",
        "6RYN",
        "H54PS9",//
        "43MVC",
        "RUC8EN",
        "A56PE9",
        "RTK85",
        "X6XWUY",
        "UYA6Y",
        "J43BYY", #190
        "939R",
        "9X6S",
        "55C54",
        "H4MR",
        "RD9R",
        "X88ESN",
        "ETYK",
        "EKPJ",
        "AS6C",
        "4PDKJP", #200
        "S6EM",
        "CCAYC",
        "EYK99J",
        "3PMK",
        "RST3YC",
        "BS5DMR",
        "DA3M",
        "6NBYV",
        "8UJT4H",
        "YMKSV", #210
        "UBAB3",
        "TAERS",
        "BXEAH",
        "KWAKJ",
        "6BMP",
        "UHWX49",
        "CN43W9",
        "BKV9",
        "B6VMS",
        "DRYN8T", #220
        "863P",
        "XD9E",
        "TP9N64",
        "B6CVDH",
        "9WRN",
        "MDB5M",
        "E9AE",
        "CD6EA",
        "D98HM9",
        "5SRU", #230
        "C6XXR",
        "6VEB",
        "3HR5",
        "CEHC", 
        "NUUA",
        "SBCRY",
        "JYSEAT",
        "Y5WT",
        "9KWW",
        "TREC3X", #240
        "MHK8N",
        "RADHA",
        "MX5BX9",
        "UM8J9E",
        "9P5R",
        "XPVN",
        "4SN6",
        "EWCM5T", #//
        "STUU",
        "JXV43", #250
        "YE6K3",
        "3YYET6",
        "4JTD",
        "YDWEE",
        "U8CH6",
        "VP6BB",
        "EMRNE",
        "8RB89R",
        "ECA5M",
        "UCPX", #260
        "D5W6A",
        "A58XR",
        "USKUPD",
        "DBHPD",
        "83CP3",
        "CHCX",
        "DWPNEY",
        "94UDA",
        "K8HT",
        "KTSX9D", #270 //
        "9CRSKB",
        "D4BS",
        "4HR6",
        "YASSW",
        "NPSRKR",
        "RPRH",
        "H4NY",
        "UBVC99",
        "Y6T8R",
        "A8M8R",  #280
        "4NXP",
        "APX3MU", #//
        "JDH4U",
        "6VJA",
        "KWYT",
        "JA3CB",
        "VRY8",
        "CHAW",
        "W8NT8R",
        "8NPU", #290
        "X46P",
        "NCXR",
        "WTPHTA",
        "ECNPX",
        "5KHX4H",
        "CPUK",
        "3CY9",
        "TRPSD",
        "KYKSXE",
        "5S49T", #300
        "NVKVP6",
        "3VSV",
        "K45K",
        "M35JES",
        "CEJJ",
        "WVH6",
        "J94DN",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",

    ]

    num_rounds = len(reference_texts)
    allowed_error_rates = [0, 0.03]



class Subsession(BaseSubsession):
    total_round_num = models.IntegerField
    def live_bid(self, data, data2):
        total_round_num = data2
    pass


class Group(BaseGroup):
    def live_bid(self, data, data2):
        Subsession.total_round_num = data2
#    pass


